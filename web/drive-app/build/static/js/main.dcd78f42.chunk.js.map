{"version":3,"sources":["api.js","DriveArea.js","App.js","serviceWorker.js","index.js"],"names":["api","url","request","get","concat","send","then","r","console","log","DriveArea","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","x","y","sendCmd","bind","assertThisInitialized","e","nativeEvent","offsetX","offsetY","xx","yy","me","parseInt","setState","catch","error","_this2","_this$state","displayX","displayY","react_default","a","createElement","ref","onMouseMove","_onMouseMove","className","onClick","goleft","forward","goright","stop","x1","y1","x2","y2","style","stroke","strokeWidth","Component","App","src_DriveArea","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dcd78f42.chunk.js","sourcesContent":["import request from 'superagent';\n\nexport default {\n  cmdReq: url=>{\n      return request.get(`/${url}`).send().then(r=> {\n          console.log('request returns');\n          console.log(r);\n      });\n  }\n};","import React, { Component } from 'react';\nimport './App.css';\nimport api from './api';\nimport debounce from 'lodash/debounce';\n\nclass DriveArea extends Component{\n    constructor(props) {\n        super(props);\n\n        this.state = { x: 100, y: 0 };\n        this.sendCmd = this.sendCmd.bind(this);\n    }\n\n    _onMouseMove(e) {\n\n        //200->180\n        //const boundingRect = this.refs.drawArea.getBoundingClientRect(); //left top\n        //e.screenX - boundingRect.left, y: e.screenY - boundingRect.top\n        let x = e.nativeEvent.offsetX;\n        let y = e.nativeEvent.offsetY;\n        if (x > 200) x = 200;\n        if (x < 0) x = 0;\n        const me = this;\n        //debounce(()=>{\n            //me.setState({ x, y });\n        //me.sendCmd(x,y);\n        //}, 100)();\n    }\n\n    sendCmd(xx,yy) {\n        const me = this;\n        const y = parseInt((100-yy)/20);\n        const x = parseInt(((xx-100)/10)+90);\n        api.cmdReq(`api/r/${x}`).then(()=>{\n          return api.cmdReq(`api/d/${y}`);\n        }).then(()=>{\n            me.setState({ x:xx, y:yy });\n        }).catch(e=>{\n            console.log(e);\n            me.setState({ error:e });\n        });\n        //this.setState({displayX: x, displayY:y});\n    }\n\n    goleft() {\n        const me = this;\n        api.cmdReq(`api/r/0`).then(()=>{\n            me.setState({ x:0 });\n        }).catch(e=>{\n            console.log(e);\n            me.setState({ error:e });\n        });\n    }\n    goright() {\n        const me = this;\n        api.cmdReq(`api/r/180`).then(()=>{\n            me.setState({ x:180 });\n        }).catch(e=>{\n            console.log(e);\n            me.setState({ error:e });\n        })\n    }\n    forward() {\n        const me = this;\n        api.cmdReq(`api/r/90`).then(()=>{\n            api.cmdReq(`api/d/5`);\n            me.setState({ x:100, y: 0 });\n        }).catch(e=>{\n            console.log(e);\n            me.setState({ error:e });\n        });\n    }\n\n    stop() {\n        const me = this;\n        api.cmdReq(`api/d/0`).then(()=>{\n            me.setState({ x:100, y:200 });\n        });\n    }\n    render() {\n        const { x, y, displayX, displayY } = this.state;\n        return <div ref=\"drawArea\" onMouseMove={this._onMouseMove.bind(this)} className=\"App-work-area\">\n            <p>Mouse coordinates: { x },{ y } ({ displayX}, {displayY})</p>\n            <button onClick={()=>this.goleft()}>Left</button>\n            <button onClick={()=>this.forward()}>Forward</button>\n            <button onClick={()=>this.goright()}>Right</button>\n            <div>\n                <button onClick={()=>this.stop()}>Stop</button>\n            </div>\n            <svg>\n                <line\n                    x1={100}\n                    y1={200}\n                    x2={x}\n                    y2={y}\n                    style={{\n                        stroke: '#458232',\n                        strokeWidth: '3px',\n                    }}\n                />\n            </svg>\n        </div>;\n    }\n}\nexport default DriveArea;","import React, { Component } from 'react';\nimport './App.css';\nimport DriveArea from './DriveArea';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <DriveArea/>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}